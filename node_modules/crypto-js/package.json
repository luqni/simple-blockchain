{
  "_from": "crypto-js",
  "_id": "crypto-js@3.1.9-1",
  "_inBundle": false,
  "_integrity": "sha1-/aGedh/Ad+Af+/3G6f38WeiAbNg=",
  "_location": "/crypto-js",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "crypto-js",
    "fetchSpec": "latest",
    "name": "crypto-js",
    "raw": "crypto-js",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/crypto-js/-/crypto-js-3.1.9-1.tgz",
  "_shasum": "fda19e761fc077e01ffbfdc6e9fdfc59e8806cd8",
  "_spec": "crypto-js",
  "_where": "/Users/spenserhuang/Desktop/js-blockchain",
  "author": {
    "name": "Evan Vosberg",
    "url": "http://github.com/evanvosberg"
  },
  "bugs": {
    "url": "https://github.com/brix/crypto-js/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "JavaScript library of crypto standards.",
  "devDependencies": {},
  "homepage": "http://github.com/brix/crypto-js",
  "keywords": [
    "AES",
    "Base64",
    "CBC",
    "CFB",
    "CTR",
    "DES",
    "HMAC",
    "Hash",
    "MD5",
    "OFB",
    "PBKDF2",
    "RC4",
    "Rabbit",
    "SHA-1",
    "SHA-256",
    "SHA1",
    "SHA256",
    "crypto",
    "security"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "crypto-js",
  "optionalDependencies": {},
  "readme": "# crypto-js\n\nJavaScript library of crypto standards.\n\n## Node.js (Install)\n\nRequirements:\n\n- Node.js\n- npm (Node.js package manager)\n\n```bash\nnpm install crypto-js\n```\n\n### Usage\n\nModular include:\n\n```javascript\nvar AES = require(\"crypto-js/aes\");\nvar SHA256 = require(\"crypto-js/sha256\");\n...\nconsole.log(SHA256(\"Message\"));\n```\n\nIncluding all libraries, for access to extra methods:\n\n```javascript\nvar CryptoJS = require(\"crypto-js\");\nconsole.log(CryptoJS.HmacSHA1(\"Message\", \"Key\"));\n```\n\n## Client (browser)\n\nRequirements:\n\n- Node.js\n- Bower (package manager for frontend)\n\n```bash\nbower install crypto-js\n```\n\n### Usage\n\nModular include:\n\n```javascript\nrequire.config({\n    packages: [\n        {\n            name: 'crypto-js',\n            location: 'path-to/bower_components/crypto-js',\n            main: 'index'\n        }\n    ]\n});\n\nrequire([\"crypto-js/aes\", \"crypto-js/sha256\"], function (AES, SHA256) {\n    console.log(SHA256(\"Message\"));\n});\n```\n\nIncluding all libraries, for access to extra methods:\n\n```javascript\n// Above-mentioned will work or use this simple form\nrequire.config({\n    paths: {\n        'crypto-js': 'path-to/bower_components/crypto-js/crypto-js'\n    }\n});\n\nrequire([\"crypto-js\"], function (CryptoJS) {\n    console.log(CryptoJS.HmacSHA1(\"Message\", \"Key\"));\n});\n```\n\n### Usage without RequireJS\n\n```html\n<script type=\"text/javascript\" src=\"path-to/bower_components/crypto-js/crypto-js.js\"></script>\n<script type=\"text/javascript\">\n    var encrypted = CryptoJS.AES(...);\n    var encrypted = CryptoJS.SHA256(...);\n</script>\n```\n\n## API\n\nSee: https://code.google.com/p/crypto-js\n\n### AES Encryption\n\n#### Plain text encryption\n\n```javascript\nvar CryptoJS = require(\"crypto-js\");\n\n// Encrypt\nvar ciphertext = CryptoJS.AES.encrypt('my message', 'secret key 123');\n\n// Decrypt\nvar bytes  = CryptoJS.AES.decrypt(ciphertext.toString(), 'secret key 123');\nvar plaintext = bytes.toString(CryptoJS.enc.Utf8);\n\nconsole.log(plaintext);\n```\n\n#### Object encryption\n\n```javascript\nvar CryptoJS = require(\"crypto-js\");\n\nvar data = [{id: 1}, {id: 2}]\n\n// Encrypt\nvar ciphertext = CryptoJS.AES.encrypt(JSON.stringify(data), 'secret key 123');\n\n// Decrypt\nvar bytes  = CryptoJS.AES.decrypt(ciphertext.toString(), 'secret key 123');\nvar decryptedData = JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n\nconsole.log(decryptedData);\n```\n\n### List of modules\n\n\n- ```crypto-js/core```\n- ```crypto-js/x64-core```\n- ```crypto-js/lib-typedarrays```\n\n---\n\n- ```crypto-js/md5```\n- ```crypto-js/sha1```\n- ```crypto-js/sha256```\n- ```crypto-js/sha224```\n- ```crypto-js/sha512```\n- ```crypto-js/sha384```\n- ```crypto-js/sha3```\n- ```crypto-js/ripemd160```\n\n---\n\n- ```crypto-js/hmac-md5```\n- ```crypto-js/hmac-sha1```\n- ```crypto-js/hmac-sha256```\n- ```crypto-js/hmac-sha224```\n- ```crypto-js/hmac-sha512```\n- ```crypto-js/hmac-sha384```\n- ```crypto-js/hmac-sha3```\n- ```crypto-js/hmac-ripemd160```\n\n---\n\n- ```crypto-js/pbkdf2```\n\n---\n\n- ```crypto-js/aes```\n- ```crypto-js/tripledes```\n- ```crypto-js/rc4```\n- ```crypto-js/rabbit```\n- ```crypto-js/rabbit-legacy```\n- ```crypto-js/evpkdf```\n\n---\n\n- ```crypto-js/format-openssl```\n- ```crypto-js/format-hex```\n\n---\n\n- ```crypto-js/enc-latin1```\n- ```crypto-js/enc-utf8```\n- ```crypto-js/enc-hex```\n- ```crypto-js/enc-utf16```\n- ```crypto-js/enc-base64```\n\n---\n\n- ```crypto-js/mode-cfb```\n- ```crypto-js/mode-ctr```\n- ```crypto-js/mode-ctr-gladman```\n- ```crypto-js/mode-ofb```\n- ```crypto-js/mode-ecb```\n\n---\n\n- ```crypto-js/pad-pkcs7```\n- ```crypto-js/pad-ansix923```\n- ```crypto-js/pad-iso10126```\n- ```crypto-js/pad-iso97971```\n- ```crypto-js/pad-zeropadding```\n- ```crypto-js/pad-nopadding```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/brix/crypto-js.git"
  },
  "version": "3.1.9-1"
}
